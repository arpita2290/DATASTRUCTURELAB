
üîπ Basic Level (1‚Äì15)

// 1. "Hello, World!" ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶æ ‡¶ï‡¶æ‡ß∞‡ßç‡¶Ø‡¶∏‡ßÇ‡¶ö‡ßÄ
#include <stdio.h>
int main() {
    // "Hello, World!" ‡¶Æ‡ßá‡¶õ‡ßá‡¶ú‡¶ü‡ßã ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
    printf("Hello, World!");
    return 0;
}

// 2. ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ß∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶¨‡¶≤‡ßà ‡¶ï‡¶æ‡ß∞‡ßç‡¶Ø‡¶∏‡ßÇ‡¶ö‡ßÄ
#include <stdio.h>
int main() {
    int a, b;
    // ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞‡¶ï‡¶æ‡ß∞‡ßÄ‡ß∞ ‡¶™‡ß∞‡¶æ ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶≤‡¶ì‡¶ï
    scanf("%d %d", &a, &b);
    // ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶¶‡ßÅ‡¶ü‡¶æ‡ß∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤ ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
    printf("%d", a + b);
    return 0;
}

// 3. ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡ß∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶∏‡¶æ‡ß∞‡ßç‡¶ß ‡¶¶‡¶ø‡ßü‡¶æ‡ß∞ ‡¶™‡¶ø‡¶õ‡¶§ ‡¶§‡ß∞‡¶≤ ‡¶Ü‡ßü‡¶§‡¶® ‡¶â‡¶≤‡¶ø‡¶ì‡ß±‡¶æ ‡¶ï‡¶æ‡ß∞‡ßç‡¶Ø‡¶∏‡ßÇ‡¶ö‡ßÄ
#include <stdio.h>
int main() {
    float r;
    // ‡¶¨‡ßç‡¶Ø‡¶æ‡¶∏‡¶æ‡ß∞‡ßç‡¶ß ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≤‡¶ì‡¶ï
    scanf("%f", &r);
    // ‡¶Ü‡ßü‡¶§‡¶® ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï (œÄr¬≤ ‡¶ß‡ß∞‡¶£‡ßá)
    printf("%f", 3.14 * r * r);
    return 0;
}

// 4. ‡¶ü‡ßá‡¶Æ‡ßç‡¶™‡ß∞‡¶æ‡ß∞‡ßÄ ‡¶≠‡ßá‡ß∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ø ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∏‡¶≤‡¶®‡¶ø ‡¶ï‡ß∞‡¶æ ‡¶ï‡¶æ‡ß∞‡ßç‡¶Ø‡¶∏‡ßÇ‡¶ö‡ßÄ
#include <stdio.h>
int main() {
    int a, b, temp;
    // ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≤‡ßà ‡¶≤‡¶ì‡¶ï
    scanf("%d %d", &a, &b);
    // ‡¶∏‡¶≤‡¶®‡¶ø ‡¶ï‡ß∞‡¶ï
    temp = a;
    a = b;
    b = temp;
    // ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡¶æ‡¶® ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
    printf("%d %d", a, b);
    return 0;
}

// 5. ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ß∞ ‡¶≠‡¶ø‡¶§‡ß∞‡¶§ ‡¶°‡¶æ‡¶ô‡ß∞‡¶ü‡ßã ‡¶¨‡¶ø‡¶ö‡¶æ‡ß∞‡¶ø ‡¶â‡¶≤‡¶ø‡¶ì‡ß±‡¶æ ‡¶ï‡¶æ‡ß∞‡ßç‡¶Ø‡¶∏‡ßÇ‡¶ö‡ßÄ
#include <stdio.h>
int main() {
    int a, b;
    // ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≤‡¶ì‡¶ï
    scanf("%d %d", &a, &b);
    // ‡¶§‡ßÅ‡¶≤‡¶®‡¶æ ‡¶ï‡ß∞‡¶ø ‡¶°‡¶æ‡¶ô‡ß∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
    if (a > b)
        printf("%d", a);
    else
        printf("%d", b);
    return 0;
}

// 6. ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶è‡¶ü‡¶æ ‡¶¨‡¶ø‡¶ú‡ßã‡ßú ‡¶®‡ßá ‡¶ú‡ßã‡ßú ‡¶ö‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int n;
    // ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≤‡¶ì‡¶ï
    scanf("%d", &n);
    // ‡¶ú‡ßã‡ßú ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶¨‡¶ø‡¶ú‡ßã‡ßú ‡¶®‡¶ø‡ß∞‡ßç‡¶ß‡¶æ‡ß∞‡¶£ ‡¶ï‡ß∞‡¶ï
    if (n % 2 == 0)
        printf("Even");
    else
        printf("Odd");
    return 0;
}

// 7. ‡¶¨‡¶õ‡ß∞ ‡¶è‡¶ñ‡¶® ‡¶Ö‡¶ß‡¶ø‡¶¨‡¶∞‡ßç‡¶∑ ‡¶®‡ßá ‡¶®‡¶π‡ßü ‡¶ö‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int year;
    scanf("%d", &year);
    // ‡¶Ö‡¶ß‡¶ø‡¶¨‡¶∞‡ßç‡¶∑ ‡¶π'‡¶≤‡ßá true ‡¶π'‡¶¨
    if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
        printf("Leap Year");
    else
        printf("Not Leap Year");
    return 0;
}

// 8. ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶è‡¶ü‡¶æ‡ß∞ ‡¶´‡ßá‡¶ï‡ßç‡¶ü‡ß∞‡¶ø‡ßü‡ßá‡¶≤ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶¨
#include <stdio.h>
int main() {
    int n, i, fact = 1;
    scanf("%d", &n);
    for (i = 1; i <= n; i++)
        fact *= i;
    printf("%d", fact);
    return 0;
}

// 9. ‡¶è‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ß∞ ‡¶ó‡ßÅ‡¶£‡¶® ‡¶∏‡ßÇ‡¶ö‡ßÄ ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    int n, i;
    scanf("%d", &n);
    for (i = 1; i <= 10; i++)
        printf("%d x %d = %d\n", n, i, n * i);
    return 0;
}

// 10. ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶è‡¶ü‡¶æ‡¶ï ‡¶â‡¶≤‡ßç‡¶ü‡ßã ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    int n, rev = 0;
    scanf("%d", &n);
    while (n != 0) {
        rev = rev * 10 + n % 10;
        n /= 10;
    }
    printf("%d", rev);
    return 0;
}

// 11. ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶è‡¶ü‡¶æ‡ß∞ ‡¶™‡ßç‡ß∞‡¶æ‡¶á‡¶Æ ‡¶®‡ßá ‡¶®‡¶π‡ßü ‡¶ö‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int n, i, flag = 1;
    scanf("%d", &n);
    if (n < 2) flag = 0;
    for (i = 2; i <= n / 2; i++)
        if (n % i == 0) {
            flag = 0;
            break;
        }
    if (flag) printf("Prime");
    else printf("Not Prime");
    return 0;
}

// 12. ‡¶è‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ß∞ ‡¶Ö‡¶Ç‡¶ï‡ß∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶¨
#include <stdio.h>
int main() {
    int n, sum = 0;
    scanf("%d", &n);
    while (n != 0) {
        sum += n % 10;
        n /= 10;
    }
    printf("%d", sum);
    return 0;
}

// 13. ‡¶è‡¶® ‡¶ü‡¶æ‡ß∞‡ßç‡¶Æ‡¶≤‡ßà‡¶ï‡ßá ‡¶´‡¶ø‡¶¨‡ßã‡¶®‡¶æ‡¶ö‡ßç‡¶ö‡¶ø ‡¶∂‡ßÉ‡¶Ç‡¶ñ‡¶≤‡¶æ ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    int n, a = 0, b = 1, c, i;
    scanf("%d", &n);
    for (i = 0; i < n; i++) {
        printf("%d ", a);
        c = a + b;
        a = b;
        b = c;
    }
    return 0;
}

// 14. ‡¶Ö‡¶ï‡ßç‡¶∑‡ß∞ ‡¶è‡¶ü‡¶æ‡ß∞ ‡¶∏‡ßç‡¶¨‡ß∞‡¶¨‡¶∞‡ßç‡¶£ ‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶û‡ßç‡¶ú‡¶®‡¶¨‡¶∞‡ßç‡¶£ ‡¶ö‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    char ch;
    scanf("%c", &ch);
    if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||
        ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')
        printf("Vowel");
    else
        printf("Consonant");
    return 0;
}

// 15. ‡¶ö‡ßá‡¶≤‡¶ö‡¶ø‡ßü‡¶æ‡¶õ ‡¶™‡ß∞‡¶æ ‡¶´‡¶æ‡ß∞‡ßá‡¶®‡¶π‡¶æ‡¶á‡¶ü‡¶§ ‡ß∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡ß∞ ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    float c;
    scanf("%f", &c);
    printf("%f", (c * 9 / 5) + 32);
    return 0;
}

 
üîπ Intermediate Level (16‚Äì30)


// 16. GCD ‡¶Ü‡ß∞‡ßÅ LCM ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶¨‡¶≤‡ßà ‡¶ï‡¶æ‡ß∞‡ßç‡¶Ø‡¶∏‡ßÇ‡¶ö‡ßÄ
#include <stdio.h>
int main() {
    int a, b, i, gcd;
    scanf("%d %d", &a, &b);
    for (i = 1; i <= a && i <= b; i++)
        if (a % i == 0 && b % i == 0)
            gcd = i;
    printf("GCD=%d\n", gcd);
    printf("LCM=%d", (a * b) / gcd);
    return 0;
}

// 17. ‡¶è‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ß∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡ß∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ó‡¶£‡¶®‡¶æ ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    int n, count = 0;
    scanf("%d", &n);
    while (n != 0) {
        n /= 10;
        count++;
    }
    printf("%d", count);
    return 0;
}

// 18. 1 ‡ß∞ ‡¶™‡ß∞‡¶æ 100 ‡¶≤‡ßà ‡¶∏‡¶ï‡¶≤‡ßã ‡¶™‡ßç‡ß∞‡¶æ‡¶á‡¶Æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶™‡ßç‡ß∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    int i, j, flag;
    for (i = 2; i <= 100; i++) {
        flag = 1;
        for (j = 2; j <= i / 2; j++)
            if (i % j == 0) {
                flag = 0;
                break;
            }
        if (flag) printf("%d ", i);
    }
    return 0;
}

// 19. ‡¶è‡¶ü‡¶æ ‡¶è‡ß∞‡ßá'‡ß∞ ‡¶Ü‡¶ü‡¶æ‡¶á‡¶§‡¶ï‡ßà ‡¶°‡¶æ‡¶ô‡ß∞ ‡¶â‡¶™‡¶æ‡¶¶‡¶æ‡¶® ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int n, i, max;
    scanf("%d", &n);
    int a[n];
    for (i = 0; i < n; i++) scanf("%d", &a[i]);
    max = a[0];
    for (i = 1; i < n; i++)
        if (a[i] > max)
            max = a[i];
    printf("%d", max);
    return 0;
}

// 20. ‡¶è‡¶ü‡¶æ ‡¶è‡ß∞‡ßá' ‡¶∏‡ß∞‡ßÅ‡ß∞ ‡¶™‡ß∞‡¶æ ‡¶°‡¶æ‡¶ô‡ß∞‡¶≤‡ßà ‡¶∏‡¶ú‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int n, i, j, temp;
    scanf("%d", &n);
    int a[n];
    for (i = 0; i < n; i++) scanf("%d", &a[i]);
    for (i = 0; i < n - 1; i++)
        for (j = i + 1; j < n; j++)
            if (a[i] > a[j]) {
                temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
    for (i = 0; i < n; i++) printf("%d ", a[i]);
    return 0;
}

// 21. ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡ß∞‡¶ø‡¶ï‡ßç‡¶∏‡ß∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int r, c, i, j;
    scanf("%d %d", &r, &c);
    int a[r][c], b[r][c], sum[r][c];
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &a[i][j]);
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &b[i][j]);
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            sum[i][j] = a[i][j] + b[i][j];
    for (i = 0; i < r; i++) {
        for (j = 0; j < c; j++)
            printf("%d ", sum[i][j]);
        printf("\n");
    }
    return 0;
}

// 22. ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡ß∞‡¶ø‡¶ï‡ßç‡¶∏‡ß∞ ‡¶ó‡ßÅ‡¶£‡¶´‡¶≤ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int r1, c1, r2, c2, i, j, k;
    scanf("%d %d", &r1, &c1);
    int a[r1][c1];
    for (i = 0; i < r1; i++)
        for (j = 0; j < c1; j++)
            scanf("%d", &a[i][j]);
    scanf("%d %d", &r2, &c2);
    int b[r2][c2], res[r1][c2];
    for (i = 0; i < r2; i++)
        for (j = 0; j < c2; j++)
            scanf("%d", &b[i][j]);
    if (c1 != r2) return 0;
    for (i = 0; i < r1; i++)
        for (j = 0; j < c2; j++) {
            res[i][j] = 0;
            for (k = 0; k < c1; k++)
                res[i][j] += a[i][k] * b[k][j];
        }
    for (i = 0; i < r1; i++) {
        for (j = 0; j < c2; j++)
            printf("%d ", res[i][j]);
        printf("\n");
    }
    return 0;
}

// 23. ‡¶è‡¶ü‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡ß∞‡¶ø‡¶ï‡ßç‡¶∏‡ß∞ ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶∏‡¶™'‡¶ú ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int r, c, i, j;
    scanf("%d %d", &r, &c);
    int a[r][c], t[c][r];
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &a[i][j]);
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            t[j][i] = a[i][j];
    for (i = 0; i < c; i++) {
        for (j = 0; j < r; j++)
            printf("%d ", t[i][j]);
        printf("\n");
    }
    return 0;
}

// 24. ‡¶è‡¶ü‡¶æ ‡¶è‡ß∞‡ßá'‡¶§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶â‡¶™‡¶æ‡¶¶‡¶æ‡¶® ‡¶è‡¶ñ‡¶® ‡¶∏‡ßÅ‡¶Æ‡ßÅ‡ß±‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int n, i, pos, val;
    scanf("%d", &n);
    int a[n+1];
    for (i = 0; i < n; i++) scanf("%d", &a[i]);
    scanf("%d %d", &pos, &val);
    for (i = n; i >= pos; i--)
        a[i] = a[i - 1];
    a[pos - 1] = val;
    for (i = 0; i <= n; i++) printf("%d ", a[i]);
    return 0;
}

// 25. ‡¶è‡¶ü‡¶æ ‡¶è‡ß∞‡ßá'‡ß∞ ‡¶™‡ß∞‡¶æ ‡¶â‡¶™‡¶æ‡¶¶‡¶æ‡¶® ‡¶Æ‡¶ö‡¶ø ‡¶™‡ßá‡¶≤‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int main() {
    int n, i, pos;
    scanf("%d", &n);
    int a[n];
    for (i = 0; i < n; i++) scanf("%d", &a[i]);
    scanf("%d", &pos);
    for (i = pos - 1; i < n - 1; i++)
        a[i] = a[i + 1];
    for (i = 0; i < n - 1; i++) printf("%d ", a[i]);
    return 0;
}

// 26. ‡¶è‡¶ü‡¶æ ‡¶è‡ß∞‡ßá'‡¶§ ‡¶è‡¶ü‡¶æ ‡¶â‡¶™‡¶æ‡¶¶‡¶æ‡¶® ‡¶ö‡¶æ‡¶ì‡¶ï (‡¶≤‡¶ø‡¶®‡¶ø‡ßü‡¶æ‡ß∞ ‡¶ö‡¶æ‡ß∞‡ßç‡¶ö)
#include <stdio.h>
int main() {
    int n, i, key;
    scanf("%d", &n);
    int a[n];
    for (i = 0; i < n; i++) scanf("%d", &a[i]);
    scanf("%d", &key);
    for (i = 0; i < n; i++)
        if (a[i] == key) {
            printf("Found at %d", i + 1);
            return 0;
        }
    printf("Not Found");
    return 0;
}

// 27. ‡¶è‡¶ü‡¶æ ‡¶∑‡ßç‡¶ü‡ßç‡ß∞‡¶ø‡¶Ç ‡¶Ö‡¶®‡ßç‚Äå‡¶Ø ‡¶è‡¶ñ‡¶® ‡¶∑‡ßç‡¶ü‡ßç‡ß∞‡¶ø‡¶Ç‡¶≤‡ßà ‡¶ï‡¶™‡¶ø ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    char str1[100], str2[100];
    scanf("%s", str1);
    int i = 0;
    while (str1[i] != '\0') {
        str2[i] = str1[i];
        i++;
    }
    str2[i] = '\0';
    printf("%s", str2);
    return 0;
}

// 28. ‡¶∑‡ßç‡¶ü‡ßç‡ß∞‡¶ø‡¶Ç‡ß∞ ‡¶¶‡ßà‡ß∞‡ßç‡¶ò‡ßç‡¶Ø ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï (‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡ß∞‡ßÄ ‡¶´‡¶æ‡¶Ç‡¶ö‡¶® ‡¶®‡ßã‡¶π‡ßã‡ß±‡¶æ‡¶ï‡ßà)
#include <stdio.h>
int main() {
    char str[100];
    int i = 0;
    scanf("%s", str);
    while (str[i] != '\0') i++;
    printf("%d", i);
    return 0;
}

// 29. ‡¶è‡¶ü‡¶æ ‡¶∑‡ßç‡¶ü‡ßç‡ß∞‡¶ø‡¶Ç ‡¶™‡ßá‡¶≤‡¶ø‡¶®‡ßç‡¶°‡ßç‡ß∞‡ßã‡¶Æ ‡¶®‡ßá ‡¶®‡¶π‡ßü ‡¶ö‡¶æ‡¶ì‡¶ï
#include <stdio.h>
#include <string.h>
int main() {
    char str[100];
    int i, len, flag = 1;
    scanf("%s", str);
    len = strlen(str);
    for (i = 0; i < len / 2; i++)
        if (str[i] != str[len - i - 1]) {
            flag = 0;
            break;
        }
    if (flag) printf("Palindrome");
    else printf("Not Palindrome");
    return 0;
}

// 30. ‡¶∑‡ßç‡¶ü‡ßç‡ß∞‡¶ø‡¶Ç‡¶§ ‡¶∏‡ßç‡¶¨‡ß∞‡¶¨‡¶∞‡ßç‡¶£, ‡¶¨‡ßç‡¶Ø‡¶û‡ßç‡¶ú‡¶®‡¶¨‡¶∞‡ßç‡¶£, ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü ‡¶Ü‡ß∞‡ßÅ ‡¶∏‡ßç‡¶™‡ßá‡¶ö ‡¶ó‡¶£‡¶®‡¶æ ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    char str[100];
    int i, v = 0, c = 0, d = 0, s = 0;
    fgets(str, sizeof(str), stdin);
    for (i = 0; str[i] != '\0'; i++) {
        if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z'))
            if (str[i] == 'a'|| str[i] == 'e'|| str[i] == 'i'|| str[i] == 'o'|| str[i] == 'u'||
                str[i] == 'A'|| str[i] == 'E'|| str[i] == 'I'|| str[i] == 'O'|| str[i] == 'U') v++;
            else c++;
        else if (str[i] >= '0' && str[i] <= '9') d++;
        else if (str[i] == ' ') s++;
    }
    printf("%d %d %d %d", v, c, d, s);
    return 0;
}



// Advanced Level (31‚Äì40)

// 31. ‡¶õ‡ßÅ‡¶á‡¶ö-‡¶ï‡ßá‡¶ö ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ø ‡¶õ‡¶ø‡¶Æ‡ßç‡¶™‡¶≤ ‡¶ï‡ßá‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶ü‡ß∞
#include <stdio.h>
int main() {
    char op;
    float a, b;
    scanf("%f %f %c", &a, &b, &op);
    switch(op) {
        case '+': printf("%f", a + b); break;
        case '-': printf("%f", a - b); break;
        case '*': printf("%f", a * b); break;
        case '/': if (b != 0) printf("%f", a / b); else printf("Divide by zero"); break;
        default: printf("Invalid operator");
    }
    return 0;
}

// 32. ‡ß∞‡ßá‡¶ï‡¶æ‡ß∞‡ßç‡¶õ‡¶® ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ø ‡¶´‡ßá‡¶ï‡ßç‡¶ü‡ß∞‡¶ø‡ßü‡ßá‡¶≤ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int factorial(int n) {
    if (n == 0) return 1;
    return n * factorial(n - 1);
}
int main() {
    int n;
    scanf("%d", &n);
    printf("%d", factorial(n));
    return 0;
}

// 33. nth ‡¶´‡¶ø‡¶¨‡ßã‡¶®‡¶æ‡¶ö‡ßç‡¶ö‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡ßã ‡ß∞‡ßá‡¶ï‡¶æ‡ß∞‡ßç‡¶õ‡¶®‡¶§ ‡¶â‡¶≤‡¶ø‡ßü‡¶æ‡¶ì‡¶ï
#include <stdio.h>
int fib(int n) {
    if (n <= 1) return n;
    return fib(n - 1) + fib(n - 2);
}
int main() {
    int n;
    scanf("%d", &n);
    printf("%d", fib(n));
    return 0;
}

// 34. ‡¶™‡¶á‡¶£‡ßç‡¶ü‡¶æ‡ß∞ ‡¶Ö‡ß∞‡¶ø‡¶•‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡¶™‡ßç‡ß∞‡¶¶‡ß∞‡ßç‡¶∂‡¶® ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    int a[5] = {10, 20, 30, 40, 50};
    int *p = a;
    for (int i = 0; i < 5; i++)
        printf("%d ", *(p + i));
    return 0;
}

// 35. ‡¶™‡¶á‡¶£‡ßç‡¶ü‡¶æ‡ß∞ ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ø ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∏‡¶≤‡¶®‡¶ø ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}
int main() {
    int a, b;
    scanf("%d %d", &a, &b);
    swap(&a, &b);
    printf("%d %d", a, b);
    return 0;
}

// 36. ‡¶¨‡¶æ‡¶¨‡¶≤ ‡¶õ‡ß∞‡ßç‡¶ü ‡¶´‡¶æ‡¶Ç‡¶ö‡¶®‡ß∞ ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§ ‡¶™‡ßç‡ß∞‡¶Ø‡¶º‡ßã‡¶ó ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
void bubbleSort(int a[], int n) {
    int i, j, temp;
    for (i = 0; i < n - 1; i++)
        for (j = 0; j < n - i - 1; j++)
            if (a[j] > a[j + 1]) {
                temp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = temp;
            }
}
int main() {
    int n;
    scanf("%d", &n);
    int a[n];
    for (int i = 0; i < n; i++) scanf("%d", &a[i]);
    bubbleSort(a, n);
    for (int i = 0; i < n; i++) printf("%d ", a[i]);
    return 0;
}

// 37. ‡¶∑‡ßç‡¶ü‡ßÅ‡¶°‡ßá‡¶£‡ßç‡¶ü ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡ß∞‡¶ï‡ßç‡¶∑‡¶£‡ß∞ ‡¶¨‡¶æ‡¶¨‡ßá ‡¶∑‡ßç‡¶ü‡ßç‡ß∞‡¶æ‡¶ï‡¶ö‡¶æ‡ß∞ ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞
#include <stdio.h>
struct Student {
    char name[50];
    int age;
    float marks;
};
int main() {
    struct Student s;
    scanf("%s %d %f", s.name, &s.age, &s.marks);
    printf("%s %d %.2f", s.name, s.age, s.marks);
    return 0;
}

// 38. ‡¶´‡¶æ‡¶á‡¶≤‡¶§ ‡¶°‡¶æ‡¶ü‡¶æ ‡¶™‡¶¢‡¶º‡¶æ ‡¶Ü‡ß∞‡ßÅ ‡¶≤‡¶ø‡¶ñ‡¶æ
#include <stdio.h>
int main() {
    FILE *f = fopen("data.txt", "w");
    fprintf(f, "Hello File");
    fclose(f);

    char ch;
    f = fopen("data.txt", "r");
    while ((ch = fgetc(f)) != EOF)
        putchar(ch);
    fclose(f);
    return 0;
}

// 39. ‡¶¶‡ßÅ‡¶ü‡¶æ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶è‡¶ï‡¶§‡ßç‡ß∞‡¶ø‡¶§ ‡¶ï‡ß∞‡¶ø ‡¶è‡¶ü‡¶æ ‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡¶æ‡¶á‡¶≤‡¶§ ‡¶∏‡¶Ç‡ß∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡ß∞‡¶ï
#include <stdio.h>
int main() {
    FILE *f1 = fopen("f1.txt", "r");
    FILE *f2 = fopen("f2.txt", "r");
    FILE *f3 = fopen("merged.txt", "w");
    char ch;
    while ((ch = fgetc(f1)) != EOF) fputc(ch, f3);
    while ((ch = fgetc(f2)) != EOF) fputc(ch, f3);
    fclose(f1); fclose(f2); fclose(f3);
    return 0;
}

// 40. malloc() ‡¶Ü‡ß∞‡ßÅ free() ‡¶¨‡ßç‡¶Ø‡ß±‡¶π‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ø ‡¶°‡¶æ‡¶á‡¶®‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶Æ‡ßá‡¶Æ‡ß∞‡¶ø ‡¶è‡¶≤'‡¶ï‡ßá‡¶∂‡¶®
#include <stdio.h>
#include <stdlib.h>
int main() {
    int n, i, *p, sum = 0;
    scanf("%d", &n);
    p = (int*) malloc(n * sizeof(int));
    for (i = 0; i < n; i++) {
        scanf("%d", &p[i]);
        sum += p[i];
    }
    printf("%d", sum);
    free(p);
    return 0;
}
